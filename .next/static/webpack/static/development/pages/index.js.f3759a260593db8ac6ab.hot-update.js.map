{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.f3759a260593db8ac6ab.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./pages/index.js"],"sourcesContent":["import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","\r\n\r\n\r\n// import React, { Component } from \"react\";\r\n\r\n\r\n\r\n//  class index extends Component {\r\n\r\n\r\n// constructor(props){\r\n//   super(props);\r\n\r\n\r\n// this.state = {\r\n//   userInput: '',\r\n//   list: []\r\n// }\r\n\r\n// }\r\n\r\n\r\n// changeUserInput(input){\r\n\r\n//   this.setState({\r\n\r\n//     userInput: input\r\n//   }, () => console.log(input))//you cany add a console.log() to check what you did was okay.\r\n// }\r\n\r\n// addToList(input){\r\n//   let listArray = this.state.list;\r\n\r\n//   listArray.push(input);\r\n\r\n//   this.setState({\r\n//     list: listArray,\r\n//     userInput: ''\r\n//   })\r\n\r\n// }\r\n\r\n\r\n// render(){\r\n\r\n// return(\r\n\r\n// <div className=\"to-do-list-main\"> \r\n\r\n// <input\r\n//  onChange={ (e)=>this.changeUserInput(e.target.value)}// all this are inside the input\r\n//   value={this.state.userInput}\r\n//    type=\"text\" \r\n//    />\r\n\r\n// <button onClick={ () => this.addToList(this.state.userInput)}  > PRESS ME</button>\r\n// <ul>\r\n// {this.state.list.map((val)=> <li>{val}</li>)};\r\n// </ul>\r\n\r\n// </div>\r\n\r\n\r\n// );\r\n\r\n\r\n// }\r\n\r\n\r\n// }\r\n\r\nimport React, { Component  } from 'react';\r\n\r\nclass index extends Component {\r\n\r\nconstructor(props) {\r\n    super(props);\r\n\r\n    this.state={\r\n        newItem:\"\",\r\n        list: []\r\n    }   \r\n}                                      \r\n\r\n\r\n\r\nupdateInput(key, value){\r\nthis.setState({\r\n  [key]: value\r\n});\r\n}\r\n\r\n\r\n\r\n\r\naddItem(){\r\n  //create item with unique id\r\n  const newItem={\r\n    id: 1 + Math.random(),\r\n    value: this.state.newItem.slice()\r\n  };\r\n  //copy of current list of items\r\nconst list = [...this.state.list];\r\n//add new item to list\r\nlist.push(newItem);\r\n//update state with new list and reset newItem input\r\nthis.setState({\r\n  list,\r\n  newItem: ''\r\n});\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nrender() {\r\n \r\nreturn (\r\n<div className=\"todo\">\r\n<div>\r\n\r\n\r\nadd an item..\r\n\r\n\r\n<br/>\r\n\r\n\r\n<input\r\ntype=\"text\"\r\n\r\nplaceholder=\"type item here\"\r\n\r\nvalue={this.state.newitem}\r\nonChange={e => this.updateInput(\"newItem\",e.target.value)}\r\n\r\n/>\r\n\r\n<button onClick={e => this.addItem()}>\r\nadd\r\n</button>\r\n\r\n\r\n</div>\r\n\r\n</div>\r\n   \r\n); // this is where return stops\r\n\r\n}//this is where render() stops\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default index;"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AAIA;AAGA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AAGA;AAGA;AAEA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AAFA;AAHA;AAOA;AACA;;;AAGA;AACA;AAGA;;;AAKA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAKA;;;AAMA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAEA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;;;;AA/EA;AACA;AAwFA;;;;A","sourceRoot":""}