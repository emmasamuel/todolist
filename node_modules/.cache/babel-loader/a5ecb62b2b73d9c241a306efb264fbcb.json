{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\EMMANUEL\\\\Desktop\\\\testjava\\\\pages\\\\index.js\";\n// import React, { Component } from \"react\";\n//  class index extends Component {\n// constructor(props){\n//   super(props);\n// this.state = {\n//   userInput: '',\n//   list: []\n// }\n// }\n// changeUserInput(input){\n//   this.setState({\n//     userInput: input\n//   }, () => console.log(input))//you cany add a console.log() to check what you did was okay.\n// }\n// addToList(input){\n//   let listArray = this.state.list;\n//   listArray.push(input);\n//   this.setState({\n//     list: listArray,\n//     userInput: ''\n//   })\n// }\n// render(){\n// return(\n// <div className=\"to-do-list-main\"> \n// <input\n//  onChange={ (e)=>this.changeUserInput(e.target.value)}// all this are inside the input\n//   value={this.state.userInput}\n//    type=\"text\" \n//    />\n// <button onClick={ () => this.addToList(this.state.userInput)}  > PRESS ME</button>\n// <ul>\n// {this.state.list.map((val)=> <li>{val}</li>)};\n// </ul>\n// </div>\n// );\n// }\n// }\nimport React, { Component } from 'react';\n\nvar index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(index, _Component);\n\n  function index(props) {\n    var _this;\n\n    _classCallCheck(this, index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(index).call(this, props));\n    _this.state = {\n      newItem: \"\",\n      list: []\n    };\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"updateInput\",\n    value: function updateInput(key, value) {\n      this.setState(_defineProperty({}, key, value));\n    }\n  }, {\n    key: \"addItem\",\n    value: function addItem() {\n      //create item with unique id\n      var newItem = {\n        id: 1 + Math.random(),\n        value: this.state.newItem.slice()\n      }; //copy of current list of items\n\n      var list = _toConsumableArray(this.state.list); //add new item to list\n\n\n      list.push(newItem); //update state with new list and reset newItem input\n\n      this.setState({\n        list: list,\n        newItem: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"todo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"add an item..\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"type item here\",\n        value: this.state.newitem,\n        onChange: function onChange(e) {\n          return _this2.updateInput(\"newItem\", e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: function onClick(e) {\n          return _this2.addItem();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"add\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, this.state.list.map(function (item) {\n        return React.createElement(\"li\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, item.value, React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.deleteItem(item.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, \" /* the \\\"x\\\" is the deleting button */ x\"));\n      })))); // this is where return stops\n    } //this is where render() stops\n\n  }]);\n\n  return index;\n}(Component);\n\nexport default index;","map":{"version":3,"sources":["C:\\Users\\EMMANUEL\\Desktop\\testjava\\pages\\index.js"],"names":["React","Component","index","props","state","newItem","list","key","value","setState","id","Math","random","slice","push","newitem","e","updateInput","target","addItem","map","item","deleteItem"],"mappings":";;;;;;;;AAGA;AAIA;AAGA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AAGA;AAGA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAkC,OAAlC;;IAEMC,K;;;;;AAEN,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAW;AACPC,MAAAA,OAAO,EAAC,EADD;AAEPC,MAAAA,IAAI,EAAE;AAFC,KAAX;AAHe;AAOlB;;;;gCAIWC,G,EAAKC,K,EAAM;AACvB,WAAKC,QAAL,qBACGF,GADH,EACSC,KADT;AAGC;;;8BAKQ;AACP;AACA,UAAMH,OAAO,GAAC;AACZK,QAAAA,EAAE,EAAE,IAAIC,IAAI,CAACC,MAAL,EADI;AAEZJ,QAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,OAAX,CAAmBQ,KAAnB;AAFK,OAAd,CAFO,CAMP;;AACF,UAAMP,IAAI,sBAAO,KAAKF,KAAL,CAAWE,IAAlB,CAAV,CAPS,CAQT;;;AACAA,MAAAA,IAAI,CAACQ,IAAL,CAAUT,OAAV,EATS,CAUT;;AACA,WAAKI,QAAL,CAAc;AACZH,QAAAA,IAAI,EAAJA,IADY;AAEZD,QAAAA,OAAO,EAAE;AAFG,OAAd;AAKC;;;6BAMQ;AAAA;;AAET,aACA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANA,EASA;AACA,QAAA,IAAI,EAAC,MADL;AAGA,QAAA,WAAW,EAAC,gBAHZ;AAKA,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWW,OALlB;AAMA,QAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,iBAAI,MAAI,CAACC,WAAL,CAAiB,SAAjB,EAA2BD,CAAC,CAACE,MAAF,CAASV,KAApC,CAAJ;AAAA,SANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATA,EAmBA;AAAQ,QAAA,OAAO,EAAE,iBAAAQ,CAAC;AAAA,iBAAI,MAAI,CAACG,OAAL,EAAJ;AAAA,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAnBA,EAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBA,EAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKf,KAAL,CAAWE,IAAX,CAAgBc,GAAhB,CAAoB,UAAAC,IAAI,EAAI;AAC3B,eACE;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACX,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACCW,IAAI,CAACb,KADN,EAEA;AAAS,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACc,UAAL,CAAgBD,IAAI,CAACX,EAArB,CAAN;AAAA,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAFA,CADF;AAQD,OATA,CADD,CAxBA,CADA,CADA,CAFS,CA8CN;AAEF,K,CAAA;;;;;EA5FmBT,S;;AAuGpB,eAAeC,KAAf","sourcesContent":["\r\n\r\n\r\n// import React, { Component } from \"react\";\r\n\r\n\r\n\r\n//  class index extends Component {\r\n\r\n\r\n// constructor(props){\r\n//   super(props);\r\n\r\n\r\n// this.state = {\r\n//   userInput: '',\r\n//   list: []\r\n// }\r\n\r\n// }\r\n\r\n\r\n// changeUserInput(input){\r\n\r\n//   this.setState({\r\n\r\n//     userInput: input\r\n//   }, () => console.log(input))//you cany add a console.log() to check what you did was okay.\r\n// }\r\n\r\n// addToList(input){\r\n//   let listArray = this.state.list;\r\n\r\n//   listArray.push(input);\r\n\r\n//   this.setState({\r\n//     list: listArray,\r\n//     userInput: ''\r\n//   })\r\n\r\n// }\r\n\r\n\r\n// render(){\r\n\r\n// return(\r\n\r\n// <div className=\"to-do-list-main\"> \r\n\r\n// <input\r\n//  onChange={ (e)=>this.changeUserInput(e.target.value)}// all this are inside the input\r\n//   value={this.state.userInput}\r\n//    type=\"text\" \r\n//    />\r\n\r\n// <button onClick={ () => this.addToList(this.state.userInput)}  > PRESS ME</button>\r\n// <ul>\r\n// {this.state.list.map((val)=> <li>{val}</li>)};\r\n// </ul>\r\n\r\n// </div>\r\n\r\n\r\n// );\r\n\r\n\r\n// }\r\n\r\n\r\n// }\r\n\r\nimport React, { Component  } from 'react';\r\n\r\nclass index extends Component {\r\n\r\nconstructor(props) {\r\n    super(props);\r\n\r\n    this.state={\r\n        newItem:\"\",\r\n        list: []\r\n    }   \r\n}                                      \r\n\r\n\r\n\r\nupdateInput(key, value){\r\nthis.setState({\r\n  [key]: value\r\n});\r\n}\r\n\r\n\r\n\r\n\r\naddItem(){\r\n  //create item with unique id\r\n  const newItem={\r\n    id: 1 + Math.random(),\r\n    value: this.state.newItem.slice()\r\n  };\r\n  //copy of current list of items\r\nconst list = [...this.state.list];\r\n//add new item to list\r\nlist.push(newItem);\r\n//update state with new list and reset newItem input\r\nthis.setState({\r\n  list,\r\n  newItem: ''\r\n});\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nrender() {\r\n \r\nreturn (\r\n<div className=\"todo\">\r\n<div>\r\n\r\n\r\nadd an item..\r\n\r\n\r\n<br/>\r\n\r\n\r\n<input\r\ntype=\"text\"\r\n\r\nplaceholder=\"type item here\"\r\n\r\nvalue={this.state.newitem}\r\nonChange={e => this.updateInput(\"newItem\",e.target.value)}\r\n\r\n/>\r\n\r\n<button onClick={e => this.addItem()}>\r\nadd\r\n</button>\r\n<br/>\r\n\r\n<ul>\r\n{this.state.list.map(item => {\r\n  return(\r\n    <li key={item.id}>\r\n    {item.value}\r\n    <button  onClick={() => this.deleteItem(item.id)}> /* the \"x\" is the deleting button */\r\n    x \r\n    </button>\r\n    </li>\r\n  )\r\n})}\r\n</ul>\r\n\r\n\r\n</div>\r\n\r\n</div>\r\n   \r\n); // this is where return stops\r\n\r\n}//this is where render() stops\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default index;"]},"metadata":{},"sourceType":"module"}