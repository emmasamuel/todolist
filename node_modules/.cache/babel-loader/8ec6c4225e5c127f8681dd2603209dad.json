{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\EMMANUEL\\\\Desktop\\\\testjava\\\\pages\\\\index.js\";\n// import React, { Component } from \"react\";\n//  class index extends Component {\n// constructor(props){\n//   super(props);\n// this.state = {\n//   userInput: '',\n//   list: []\n// }\n// }\n// changeUserInput(input){\n//   this.setState({\n//     userInput: input\n//   }, () => console.log(input))//you cany add a console.log() to check what you did was okay.\n// }\n// addToList(input){\n//   let listArray = this.state.list;\n//   listArray.push(input);\n//   this.setState({\n//     list: listArray,\n//     userInput: ''\n//   })\n// }\n// render(){\n// return(\n// <div className=\"to-do-list-main\"> \n// <input\n//  onChange={ (e)=>this.changeUserInput(e.target.value)}// all this are inside the input\n//   value={this.state.userInput}\n//    type=\"text\" \n//    />\n// <button onClick={ () => this.addToList(this.state.userInput)}  > PRESS ME</button>\n// <ul>\n// {this.state.list.map((val)=> <li>{val}</li>)};\n// </ul>\n// </div>\n// );\n// }\n// }\nimport React, { Component } from 'react';\n\nvar index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(index, _Component);\n\n  function index() {\n    var _this;\n\n    _classCallCheck(this, index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(index).call(this));\n    _this.state = {\n      todos: []\n    };\n    _this.todoInput = '';\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"addTodo\",\n    value: function addTodo() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"TODO LIST\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \" Todo's count: \", this.state.todos.length), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"sample\")), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter todo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Add\"));\n    }\n  }]);\n\n  return index;\n}(Component);\n\nexport default index;","map":{"version":3,"sources":["C:\\Users\\EMMANUEL\\Desktop\\testjava\\pages\\index.js"],"names":["React","Component","index","state","todos","todoInput","length"],"mappings":";;;;;;AAAA;AAIA;AAGA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AAGA;AAGA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAkC,OAAlC;;IAIMC,K;;;;;AACN,mBAAa;AAAA;;AAAA;;AACX;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAIA,UAAKC,SAAL,GAAiB,EAAjB;AAPW;AAQZ;;;;8BAGQ,CAER;;;6BAKQ;AAIT,aAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAmB,KAAKF,KAAL,CAAWC,KAAX,CAAiBE,MAApC,CALA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,CANA,EASA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVA,CAHA;AAwBC;;;;EA/CmBL,S;;AA0DpB,eAAeC,KAAf","sourcesContent":["// import React, { Component } from \"react\";\r\n\r\n\r\n\r\n//  class index extends Component {\r\n\r\n\r\n// constructor(props){\r\n//   super(props);\r\n\r\n\r\n// this.state = {\r\n//   userInput: '',\r\n//   list: []\r\n// }\r\n\r\n// }\r\n\r\n\r\n// changeUserInput(input){\r\n\r\n//   this.setState({\r\n\r\n//     userInput: input\r\n//   }, () => console.log(input))//you cany add a console.log() to check what you did was okay.\r\n// }\r\n\r\n// addToList(input){\r\n//   let listArray = this.state.list;\r\n\r\n//   listArray.push(input);\r\n\r\n//   this.setState({\r\n//     list: listArray,\r\n//     userInput: ''\r\n//   })\r\n\r\n// }\r\n\r\n\r\n// render(){\r\n\r\n// return(\r\n\r\n// <div className=\"to-do-list-main\"> \r\n\r\n// <input\r\n//  onChange={ (e)=>this.changeUserInput(e.target.value)}// all this are inside the input\r\n//   value={this.state.userInput}\r\n//    type=\"text\" \r\n//    />\r\n\r\n// <button onClick={ () => this.addToList(this.state.userInput)}  > PRESS ME</button>\r\n// <ul>\r\n// {this.state.list.map((val)=> <li>{val}</li>)};\r\n// </ul>\r\n\r\n// </div>\r\n\r\n\r\n// );\r\n\r\n\r\n// }\r\n\r\n\r\n// }\r\n\r\nimport React, { Component  } from 'react';\r\n\r\n\r\n\r\nclass index extends Component {\r\nconstructor(){\r\n  super()\r\n\r\n  this.state = {\r\n    todos: []\r\n  }\r\n\r\n  this.todoInput = ''\r\n}\r\n\r\n\r\naddTodo(){\r\n\r\n}\r\n\r\n\r\n\r\n\r\nrender() {\r\n\r\n\r\n\r\nreturn (\r\n\r\n\r\n<div>\r\n\r\n<h1>\r\nTODO LIST\r\n</h1>\r\n<p> Todo's count: {this.state.todos.length}</p>\r\n<ul>\r\n<li>sample</li>\r\n</ul>\r\n<input type=\"text\" placeholder=\"Enter todo\" />\r\n<button>Add</button>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n);\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default index;"]},"metadata":{},"sourceType":"module"}