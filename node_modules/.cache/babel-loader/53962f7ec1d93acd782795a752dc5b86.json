{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\EMMANUEL\\\\Desktop\\\\testjava\\\\pages\\\\index.js\";\n// import React, { Component } from \"react\";\n//  class index extends Component {\n// constructor(props){\n//   super(props);\n// this.state = {\n//   userInput: '',\n//   list: []\n// }\n// }\n// changeUserInput(input){\n//   this.setState({\n//     userInput: input\n//   }, () => console.log(input))//you cany add a console.log() to check what you did was okay.\n// }\n// addToList(input){\n//   let listArray = this.state.list;\n//   listArray.push(input);\n//   this.setState({\n//     list: listArray,\n//     userInput: ''\n//   })\n// }\n// render(){\n// return(\n// <div className=\"to-do-list-main\"> \n// <input\n//  onChange={ (e)=>this.changeUserInput(e.target.value)}// all this are inside the input\n//   value={this.state.userInput}\n//    type=\"text\" \n//    />\n// <button onClick={ () => this.addToList(this.state.userInput)}  > PRESS ME</button>\n// <ul>\n// {this.state.list.map((val)=> <li>{val}</li>)};\n// </ul>\n// </div>\n// );\n// }\n// }\nimport React, { Component } from 'react';\nimport './todo';\n\nvar index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(index, _Component);\n\n  function index() {\n    var _this;\n\n    _classCallCheck(this, index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(index).call(this));\n    _this.state = {\n      todos: []\n    };\n    _this.todoInput = '';\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"addTodo\",\n    value: function addTodo() {\n      var todoValue = this.todoInput.value;\n      var newTodos = this.state.todos;\n      newTodos.push(todoValue);\n      this.setState({\n        todos: newTodos\n      }); //reset value\n\n      this.todoInput.value = \"\"; // set focus to input\n\n      this.todoInput.focus();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"TODO LIST\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \" Todo's count: \", this.state.todos.length), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, this.state.todos.map(function (todo, index) {\n        return React.createElement(Todo, {\n          key: index,\n          todo: todo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        });\n      }), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"sample\")), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter todo\",\n        ref: function ref(input) {\n          return _this2.todoInput = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.addTodo.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Add\"));\n    }\n  }]);\n\n  return index;\n}(Component);\n\nexport default index;","map":{"version":3,"sources":["C:\\Users\\EMMANUEL\\Desktop\\testjava\\pages\\index.js"],"names":["React","Component","index","state","todos","todoInput","todoValue","value","newTodos","push","setState","focus","length","map","todo","input","addTodo","bind"],"mappings":";;;;;;AAAA;AAIA;AAGA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AAGA;AAGA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAkC,OAAlC;AAEA,OAAO,QAAP;;IAEMC,K;;;;;AACN,mBAAa;AAAA;;AAAA;;AACX;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAIA,UAAKC,SAAL,GAAiB,EAAjB;AAPW;AAQZ;;;;8BAGQ;AACP,UAAIC,SAAS,GAAG,KAAKD,SAAL,CAAeE,KAA/B;AACF,UAAIC,QAAQ,GAAG,KAAKL,KAAL,CAAWC,KAA1B;AACAI,MAAAA,QAAQ,CAACC,IAAT,CAAcH,SAAd;AAEA,WAAKI,QAAL,CAAc;AACZN,QAAAA,KAAK,EAAEI;AADK,OAAd,EALS,CAWT;;AAEA,WAAKH,SAAL,CAAeE,KAAf,GAAuB,EAAvB,CAbS,CAeT;;AACA,WAAKF,SAAL,CAAeM,KAAf;AAGC;;;6BAaQ;AAAA;;AAIT,aAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAmB,KAAKR,KAAL,CAAWC,KAAX,CAAiBQ,MAApC,CALA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKT,KAAL,CAAWC,KAAX,CAAiBS,GAAjB,CAAqB,UAACC,IAAD,EAAMZ,KAAN,EAAgB;AACpC,eAAQ,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,KAAX;AAAkB,UAAA,IAAI,EAAEY,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACD,OAFA,CADD,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA,CANA,EAYA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,YAA/B;AAA4C,QAAA,GAAG,EAAE,aAACC,KAAD;AAAA,iBAAU,MAAI,CAACV,SAAL,GAAiBU,KAA3B;AAAA,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZA,EAaA;AAAQ,QAAA,OAAO,EAAE,KAAKC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAbA,CAHA;AA2BC;;;;EA3EmBhB,S;;AAsFpB,eAAeC,KAAf","sourcesContent":["// import React, { Component } from \"react\";\r\n\r\n\r\n\r\n//  class index extends Component {\r\n\r\n\r\n// constructor(props){\r\n//   super(props);\r\n\r\n\r\n// this.state = {\r\n//   userInput: '',\r\n//   list: []\r\n// }\r\n\r\n// }\r\n\r\n\r\n// changeUserInput(input){\r\n\r\n//   this.setState({\r\n\r\n//     userInput: input\r\n//   }, () => console.log(input))//you cany add a console.log() to check what you did was okay.\r\n// }\r\n\r\n// addToList(input){\r\n//   let listArray = this.state.list;\r\n\r\n//   listArray.push(input);\r\n\r\n//   this.setState({\r\n//     list: listArray,\r\n//     userInput: ''\r\n//   })\r\n\r\n// }\r\n\r\n\r\n// render(){\r\n\r\n// return(\r\n\r\n// <div className=\"to-do-list-main\"> \r\n\r\n// <input\r\n//  onChange={ (e)=>this.changeUserInput(e.target.value)}// all this are inside the input\r\n//   value={this.state.userInput}\r\n//    type=\"text\" \r\n//    />\r\n\r\n// <button onClick={ () => this.addToList(this.state.userInput)}  > PRESS ME</button>\r\n// <ul>\r\n// {this.state.list.map((val)=> <li>{val}</li>)};\r\n// </ul>\r\n\r\n// </div>\r\n\r\n\r\n// );\r\n\r\n\r\n// }\r\n\r\n\r\n// }\r\n\r\nimport React, { Component  } from 'react';\r\n\r\nimport './todo';\r\n\r\nclass index extends Component {\r\nconstructor(){\r\n  super()\r\n\r\n  this.state = {\r\n    todos: []\r\n  }\r\n\r\n  this.todoInput = ''\r\n}\r\n\r\n\r\naddTodo(){\r\n  let todoValue = this.todoInput.value\r\nlet newTodos = this.state.todos\r\nnewTodos.push(todoValue)\r\n\r\nthis.setState({\r\n  todos: newTodos\r\n})\r\n\r\n\r\n\r\n//reset value\r\n\r\nthis.todoInput.value = \"\" \r\n\r\n// set focus to input\r\nthis.todoInput.focus()\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nrender() {\r\n\r\n\r\n\r\nreturn (\r\n\r\n\r\n<div>\r\n\r\n<h1>\r\nTODO LIST\r\n</h1>\r\n<p> Todo's count: {this.state.todos.length}</p>\r\n<ul>\r\n{this.state.todos.map((todo,index) => {\r\n  return (<Todo key={index} todo={todo} />)\r\n})}\r\n<li>sample</li>\r\n</ul>\r\n<input type=\"text\" placeholder=\"Enter todo\" ref={(input)=> this.todoInput = input} />\r\n<button onClick={this.addTodo.bind(this)}>Add</button>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n);\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default index;"]},"metadata":{},"sourceType":"module"}